AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Umbrella Service
Parameters:
  DataBucket:
    Type: String
  BackupBucket:
    Type: String
  AzureConnectionString:
    Type : 'AWS::SSM::Parameter::Value<String>'
    Default: AZURE_CONNECTION_STRING
Resources:
  SentNotificationsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub 'WeatherData-${AWS::StackName}'
  # Lambda function that will fire every 5 minutes, check the Weather API
  # If the weather is dangerous, we notify the IT Pro of bad conditions
  BadWeatherTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: !Ref 'AWS::StackName'
      # Subscription:
      # - Endpoint: +18016150877
      #   Protocol: sms
  CronLambda:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 10
      FunctionName: !Sub 'Cron-${AWS::StackName}'
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: ./lambda/cron
      MemorySize: 128
      Events:
        CronEvent:
          Type: Schedule
          Properties:
            Schedule: rate(2 minutes)
      Environment:
        Variables:
          SNS_TOPIC: !Ref BadWeatherTopic
          DATA_TABLE: !Ref SentNotificationsTable
          BACKUP_FUNCTION: !Ref StartBackupProcess
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Resource:
                - !Ref BadWeatherTopic
              Action:
                - 'sns:Publish'
            - Effect: Allow
              Resource:
                - !GetAtt SentNotificationsTable.Arn
              Action:
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
            - Effect: Allow
              Resource:
                - !GetAtt StartBackupProcess.Arn
              Action:
                - 'lambda:InvokeFunction'
        
  # Alexa skill for IT Pro to check the weather in a certain region
  CheckWeatherAlexaSkill:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 10
      FunctionName: !Sub 'CheckWeatherAlexaSkill-${AWS::StackName}'
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: ./lambda/checkWeatherAlexaSkill
      MemorySize: 128
      Environment:
        Variables:
          BACKUP_FUNCTION: !Ref StartBackupProcess
      Events:
        Alexa:
          Type: AlexaSkill
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Resource:
                - !GetAtt StartBackupProcess.Arn
              Action:
                - 'lambda:InvokeFunction'
  # Lambda function that starts the backup process, if the IT Pro chooses to
  StartBackupProcess:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 300
      FunctionName: !Sub 'StartBackupProcess-${AWS::StackName}'
      Handler: index.handler
      Runtime: nodejs8.10
      CodeUri: ./lambda/startBackupProcess
      MemorySize: 128
      Environment:
        Variables:
          DATA_BUCKET: !Ref DataBucket
          BACKUP_BUCKET: !Ref BackupBucket
          AZURE_STORAGE_CONNECTION_STRING: !Ref AzureConnectionString
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Resource:
                - !Sub 'arn:aws:s3:::${DataBucket}/*'
                - !Sub 'arn:aws:s3:::${DataBucket}'
              Action:
                - 's3:ListObjects'
                - 's3:GetObject'
                - 's3:ListBucket'
            - Effect: Allow
              Resource:
                - !Sub 'arn:aws:s3:::${BackupBucket}/*'
              Action:
                - 's3:PutObject'

